{"version":3,"sources":["component/NumStepper.js","component/Button.js","component/ButtonGroup.js","component/DropdownMenu.js","component/assets/play.svg","component/assets/stop.svg","component/assets/power.svg","component/Sequencer.js","index.js"],"names":["Button","handleChange","event","props","changeHandler","target","value","className","this","label","type","id","name","min","max","onChange","React","Component","handleClick","row","col","sampleBtn","selected","playing","currentBeat","join","trim","onClick","text","ButtonGroup","e","innerText","buttons","i","buttonClass","push","labelText","DropdownMenu","console","log","options","names","length","Sequencer","playSample","audioBuffer","time","sampleSource","audioContext","createBufferSource","buffer","connect","destination","start","nextBeat","secondsPerBeat","state","bpm","nextBeatTime","scheduleBeat","beatNumber","queue","beat","pads","samples","sample","scheduler","currentTime","scheduleAheadTime","timerID","window","setTimeout","lookAhead","resume","requestAnimationFrame","draw","stop","clearTimeout","drawBeat","lastBeatDrawn","splice","setState","handleBPMChange","sequenceButtonHandler","togglePad","playButtonHandler","isPlaying","buttonGroupHandler","pattern","currentPattern","patterns","drumKitChangeHandler","currentDrumKit","loadSamples","AudioContext","webkitAudioContext","initializePatterns","index","presets","drumKits","map","drumKit","indexOf","fetch","url","then","response","arrayBuffer","decodeAudioData","sampleItems","sampleItem","arr","temp","j","initializePads","r","c","cols","renderButton","rows","renderRow","drumKitNames","defaultVal","src","playIcon","width","height","stopIcon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e82149c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./NumStepper.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    changeHandler: PropTypes.func,\n    label: PropTypes.string,\n    defaultVal: PropTypes.number,\n    value: PropTypes.string\n  };\n\n  handleChange = (event) => {\n    this.props.changeHandler(event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"component-num-stepper\">\n        <div className=\"input-wrapper\">\n          <label>{this.props.label}</label>\n          <input type=\"number\" id=\"bpm\" name=\"bpm\" min={this.props.min}\n            max={this.props.max} value={this.props.value} onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    row: PropTypes.number,\n    col: PropTypes.number,\n    handleClick: PropTypes.func,\n    playing: PropTypes.bool,\n    selected: PropTypes.bool,\n    currentBeat: PropTypes.number,\n    sampleBtn: PropTypes.bool,\n    text: PropTypes.string\n  };\n\n  handleClick = () => {\n    this.props.handleClick(this.props.row, this.props.col, this.props.sampleBtn);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.sampleBtn ? \"sample\" : \"\",\n      this.props.selected ? \"selected\" : \"\",\n      this.props.playing && this.props.col === this.props.currentBeat ? \"playing \" : \"\"\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button onClick={this.handleClick}>{this.props.text}</button>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ButtonGroup.css\";\n\nexport default class ButtonGroup extends React.Component {\n  static propTypes = {\n    selected: PropTypes.number,\n    buttons: PropTypes.number,\n    handleClick: PropTypes.func,\n    labelText: PropTypes.string\n  };\n\n  handleClick = (e) => {\n    this.props.handleClick(e.target.innerText);\n  };\n\n  render() {\n    const buttons = [];\n    for (let i = 0; i < this.props.buttons; ++i) {\n      const buttonClass = [\n        \"group-button\",\n        this.props.selected === i ? \"selected\" : \"\"\n      ];\n      buttons.push(<button className={buttonClass.join(\" \").trim()} onClick={this.handleClick}>{i+1}</button>);\n\n      if (i !== this.props.buttons - 1) {\n        buttons.push(<div className=\"divider\"></div>);\n      }\n    }\n\n    return (\n      <div className=\"component-button-group\">\n        <label>{this.props.labelText}</label>\n        <div className=\"buttons\">\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DropdownMenu.css\";\n\nexport default class DropdownMenu extends React.Component {\n  static propTypes = {\n    names: PropTypes.array,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    changeHandler: PropTypes.func\n  };\n\n  handleChange = (e) => {\n    console.log(e.target.value);\n    this.props.changeHandler(e.target.value);\n  };\n\n  render() {\n    const options = [];\n    for (let i = 0; i < this.props.names.length; i++) {\n      options.push(<option value={this.props.names[i]}>{this.props.names[i]}</option>);\n    }\n\n    return (\n      <div className=\"component-dropdown-menu\">\n        <label>{this.props.label}</label>\n        <select onChange={this.handleChange}>\n          {options}\n        </select>\n      </div>\n    );\n  }\n}","export default __webpack_public_path__ + \"static/media/play.46a9bdd6.svg\";","export default __webpack_public_path__ + \"static/media/stop.b7dedbb2.svg\";","export default __webpack_public_path__ + \"static/media/power.52d90cb0.svg\";","import React from \"react\";\nimport NumStepper from \"./NumStepper\";\nimport Button from \"./Button\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport playIcon from \"./assets/play.svg\";\nimport stopIcon from \"./assets/stop.svg\";\nimport powerIcon from \"./assets/power.svg\";\nimport presets from \"./presets.json\";\nimport \"./Sequencer.css\";\n\n\nexport default class Sequencer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.patterns = [];\n    this.queue = [];\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.lookAhead = 25.0;\n    this.scheduleAheadTime = 0.1;\n    this.timerID = null;\n    this.currentBeat = 0;\n    this.nextBeatTime = 0.0;\n    this.lastBeatDrawn = 15;\n\n    this.state = {\n      bpm: 100,\n      isPlaying: false,\n      drawBeat: 0,\n      samples: [],\n      currentPattern: 0,\n      currentDrumKit: \"808\",\n      pads: []\n    }\n  }\n\n  componentDidMount() {\n    this.initializePatterns();\n    this.loadSamples();\n  }\n\n  loadSamples() {\n    this.setState({samples: []});\n    let index = presets.drumKits.map((drumKit) => { return drumKit.name; }).indexOf(this.state.currentDrumKit);\n\n    let samples = presets.drumKits[index].samples;\n    for (let i = 0; i < samples.length; i++) {\n      fetch(samples[i].url).then((response) => response.arrayBuffer())\n        .then((arrayBuffer) => this.audioContext.decodeAudioData(arrayBuffer, (buffer) => {\n          let sampleItems = [...this.state.samples];\n          let sampleItem = {...sampleItems[i]};\n          sampleItem = {sample: buffer, name: samples[i].name};\n          sampleItems[i] = sampleItem;\n          this.setState({samples: sampleItems});\n        }\n      ));\n    }\n  }\n\n  initializePads(arr) {\n    for (let i = 0; i < 6; i++) {\n      let temp = [];\n      for (let j = 0; j < 16; j++) {\n        temp.push(0);\n      }\n      arr.push(temp);\n    }\n  }\n\n  initializePatterns() {\n    for (let i = 0; i < 8; i++) {\n      let temp = [];\n      this.initializePads(temp)\n      this.patterns.push(temp);\n    }\n\n    this.setState({pads: this.patterns[0]});\n  }\n\n  togglePad(row, col) {\n    this.setState({\n      pads: this.state.pads.map((r, i) => r.map((c, j) => {\n        if (i === row && j === col) {\n          this.patterns[this.state.currentPattern][i][j] = (c === 0 ? 1 : 0); // update the pattern         \n          return (c === 0 ? 1 : 0);\n        }\n        else {\n          this.patterns[this.state.currentPattern][i][j] =  c; // update the pattern\n          return c;\n        }\n      }))\n    });\n  }\n\n  /* web audio functions */\n\n  playSample = (audioBuffer, time) => {\n    const sampleSource = this.audioContext.createBufferSource();\n    sampleSource.buffer = audioBuffer;\n    sampleSource.connect(this.audioContext.destination);\n    sampleSource.start(time);\n    return sampleSource;\n  }\n\n  nextBeat = () => {\n    const secondsPerBeat = 60.0 / this.state.bpm / 4;\n    this.nextBeatTime += secondsPerBeat;\n\n    this.currentBeat++;\n    if (this.currentBeat === 16) {\n      this.currentBeat = 0;\n    }\n  }\n\n  scheduleBeat = (beatNumber, time) => {\n    this.queue.push({beat: beatNumber, time: time});\n\n    for (var i = 0; i < this.state.pads.length; i++) {\n      if (this.state.pads[i][beatNumber]) {\n        if (typeof this.state.samples[i] != \"undefined\" && this.state.samples[i])\n          this.playSample(this.state.samples[i].sample, time);\n      }\n    }\n  }\n\n  scheduler = () => {\n    while (this.nextBeatTime < this.audioContext.currentTime + this.scheduleAheadTime) {\n      this.scheduleBeat(this.currentBeat, this.nextBeatTime);\n      this.nextBeat();\n    }\n\n    this.timerID = window.setTimeout(this.scheduler, this.lookAhead);\n  }\n\n  start = () => {\n    if (this.audioContext.state == 'suspended') {\n      this.audioContext.resume();\n    }\n\n    this.currentBeat = 0;\n    this.nextBeatTime = this.audioContext.currentTime;\n    this.scheduler();\n    requestAnimationFrame(this.draw);\n  }\n\n  stop = () => {\n    window.clearTimeout(this.timerID);\n  }\n\n  /* animation functions */\n\n  draw = () => {\n    let drawBeat = this.lastBeatDrawn;\n    const currentTime = this.audioContext.currentTime;\n\n    while (this.queue.length && this.queue[0].time < currentTime) {\n      drawBeat = this.queue[0].beat;\n      this.queue.splice(0, 1);\n    }\n\n    if (this.lastBeatDrawn !== drawBeat) {\n      this.setState({drawBeat: drawBeat});\n\n      this.lastBeatDrawn = drawBeat;\n    }\n\n    requestAnimationFrame(this.draw);\n  }\n\n  /* event handlers */\n\n  handleBPMChange = (value) => {\n    if (value >= 40 && value <= 240) {\n      this.setState({bpm: value});\n    }\n  }\n\n  sequenceButtonHandler = (row, col, sampleBtn) => {\n    if (sampleBtn && typeof this.state.samples[row] != 'undefined' && this.state.samples[row]) {\n      this.playSample(this.state.samples[row].sample, 0);\n    } else {\n      console.log(\"sequence button at row \" + row + \" col pushed\");\n      var temp = this.state.pads[row][col];\n      this.togglePad(row, col);\n    }\n  }\n\n  playButtonHandler = () => {\n    this.setState({isPlaying: !this.state.isPlaying}, () => {\n      if (this.state.isPlaying) {\n        this.start();\n      } else {\n        this.stop();\n      }\n    });\n  }\n\n  buttonGroupHandler = (pattern) => {\n    this.setState({currentPattern: pattern-1}, () => {\n      this.setState({pads: this.patterns[this.state.currentPattern]})\n    });\n  }\n\n  drumKitChangeHandler = (value) => {\n    this.setState({currentDrumKit: value}, () => {\n      this.loadSamples()\n    });\n  }\n\n  /* render functions */\n\n  renderButton(row, col){\n    if (!col) {\n      return(<div className=\"sampleBtn-container\">\n        <label className=\"sampleBtn-label\">\n        {typeof this.state.samples[row] === 'undefined' ||  !this.state.samples[row] ? \"\" : this.state.samples[row].name}\n        </label>\n        <Button handleClick={this.sequenceButtonHandler} \n        row={row}\n        sampleBtn />\n        </div>\n      );\n    } else {\n      return (<Button handleClick={this.sequenceButtonHandler} \n        row={row} \n        col={col-1} \n        playing={this.state.isPlaying} \n        selected={typeof this.state.pads[row] === 'undefined' ? false : this.state.pads[row][col-1] === 1}\n        currentBeat={this.state.drawBeat} />\n      );\n    }\n  }\n\n  renderRow(row) {\n    const cols = [];\n    for (var i = 0; i < 17; i++) {\n      cols.push(this.renderButton(row, i));\n    }\n    return (<div>{cols}</div>);\n  }\n\n  render() {\n    const rows = [];\n    for (var i = 0; i < 6; i++) {\n      rows.push(this.renderRow(i));\n    }\n\n    const drumKitNames = [];\n    for (let i = 0; i < presets.drumKits.length; i++) {\n      drumKitNames.push(presets.drumKits[i].name);\n    }\n\n    return (\n      <div className=\"component-app\">\n        <div className=\"content-wrapper\">\n          <div className=\"display-wrapper\">\n            <div className=\"first-col-wrapper\">\n              <DropdownMenu label=\"drum kit\" names={drumKitNames} changeHandler={this.drumKitChangeHandler}/>\n              <NumStepper value={\"\" + this.state.bpm} label=\"BPM\" min={40} max={240} changeHandler={this.handleBPMChange} defaultVal={100}/>\n            </div>\n            <button className={\"on-button\" + (this.state.isPlaying ? \" playing\" : \"\")} onClick={this.playButtonHandler}>\n              <span>{(this.state.isPlaying ? \"Stop\" : \"Play\")}</span>\n              <img src={playIcon} width=\"12\" height=\"12\" className={\"play-icon\" + (this.state.isPlaying ? \" playing\" : \"\")} />\n              <img src={stopIcon} width=\"12\" height=\"12\" className={\"stop-icon\" + (this.state.isPlaying ? \" playing\" : \"\")} />\n            </button>\n            <div>\n              <ButtonGroup labelText={\"patterns\"} selected={this.state.currentPattern} buttons={8} handleClick={this.buttonGroupHandler}/>\n            </div>\n          </div>\n          <div className=\"button-panel\">\n            {rows}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Sequencer from './component/Sequencer';\n\nReactDOM.render(<Sequencer />, document.getElementById('root'));"],"sourceRoot":""}